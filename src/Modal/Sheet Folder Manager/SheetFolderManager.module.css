/* Manager wrapper - ensure full height */
.managerWrapper {
  background: transparent;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.managerWrapper.darkTheme {
  background: transparent;
}

/* Scrollable container - remove scrolling, make full height */
.scrollContainer {
  display: flex;
  flex-direction: column;
  flex: 1; /* Take remaining space */
  padding-top: 0;
  box-sizing: border-box;
  width: 100%;
}

.scrollContainer.darkTheme {
  background: transparent;
}

/* Toggle container - fixed height */
.toggleContainer {
  display: flex;
  width: 100%;
  height: 44px; /* Fixed height */
  margin: 0 auto 20px auto;
  background: rgb(229, 229, 234);
  border-radius: 12px;
  position: relative;
  z-index: 10;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.toggleContainer.darkTheme {
  background: rgb(44, 44, 46); /* Dark mode: gray */
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
}

.toggleButton {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #1d1d1f; /* Light mode text */
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  z-index: 12; /* Above toggleBackground */
  transition: color 0.3s ease;
  height: 100%; /* Ensure button fills container height */
  line-height: 36px;
}

.toggleButton.darkTheme {
  color: #ffffff; /* Dark mode text */
}

.toggleButton.activeToggle {
  color: #007aff; /* Highlight active toggle */
}

.toggleButton.activeToggle.darkTheme {
  color: #0a84ff;
}

.toggleBackground {
  position: absolute;
  top: 4px;
  bottom: 4px;
  width: calc(50% - 2px); /* Match button width minus padding */
  background: rgba(255, 255, 255, 0.95); /* Light mode selected */
  border-radius: 10px;
  transition: left 0.3s ease;
  z-index: 11; /* Below toggleButton */
}

.toggleBackground.darkTheme {
  background: rgba(58, 58, 60, 0.95); /* Dark mode selected */
}

.sheetActive {
  left: 4px; /* Align with left padding */
}

.folderActive {
  left: calc(50% - 2px); /* Adjusted to center under right button */
}

/* Content container - ensure it grows to fit */
.contentContainer {
  display: flex;
  flex-direction: column;
  gap: 16px;
  flex: 1; /* Allow it to take remaining space */
}

.contentContainer.darkTheme {
  /* No additional dark theme styles needed */
}

/* Input field */
.inputField {
  width: 100%;
  padding: 12px 16px;
  border: none;
  border-radius: 12px;
  font-size: 14px;
  font-weight: 400;
  line-height: 20px; /* Match checkbox height */
  color: #1d1d1f; /* Light mode text */
  background: #ffffff; /* Light mode: white */
  box-sizing: border-box;
  transition: all 0.3s ease, background 0.3s ease, color 0.3s ease;
}

.inputField.darkTheme {
  color: #ffffff; /* Dark mode text */
  background: rgba(44, 44, 46, 0.95); /* Dark mode: matches cards */
}

.inputField:focus {
  outline: none;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}

.inputField.darkTheme:focus {
  background: rgba(44, 44, 46, 0.95);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

/* Header section title */
.headerSectionTitle {
  font-size: 16px;
  font-weight: 600;
  color: #1d1d1f; /* Light mode text */
  padding: 8px 0; /* Vertical padding for spacing */
  margin: 0; /* Reset default margins */
  text-align: center;
}

.headerSectionTitle.darkTheme {
  color: #ffffff; /* Dark mode text */
}

/* Header list */
.headerList {
  border-radius: 12px; /* Match item border-radius for overflow */
  background: transparent;
  overflow: hidden; /* Ensure rounded corners are visible */
}

.headerList.darkTheme {
  background: transparent;
}

.headerItem {
  padding: 9px 16px;
  background: rgba(255, 255, 255, 0.95); /* Light mode */
  border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Light mode border */
  transition: background 0.2s ease;
  cursor: pointer;
  min-height: 25px; /* Consistent height */
  display: flex;
  align-items: center;
}

.headerItem.darkTheme {
  background: rgba(44, 44, 46, 0.95); /* Dark mode */
  border-bottom: 1px solid rgba(255, 255, 255, 0.1); /* Dark mode border */
}

.headerItem.selected {
  background: rgba(0, 122, 255, 0.1); /* Light mode: subtle blue */
}

.headerItem.selected.darkTheme {
  background: rgba(10, 132, 255, 0.2); /* Dark mode: subtle blue */
}

.headerItem:first-child {
  border-top-left-radius: 12px;
  border-top-right-radius: 12px;
}

.headerItem:last-child {
  border-bottom: none;
  border-bottom-left-radius: 12px;
  border-bottom-right-radius: 12px;
}

.headerItem:hover {
  background: rgba(0, 0, 0, 0.05); /* Light mode hover */
}

.headerItem.darkTheme:hover {
  background: rgba(255, 255, 255, 0.1); /* Dark mode hover */
}

.headerRow {
  display: flex;
  align-items: center;
  width: 100%;
  min-height: 20px; /* Match checkbox */
}

.headerNameType {
  display: flex;
  align-items: center;
  gap: 8px;
  flex: 1;
}

.headerNameType span {
  flex: 0 0 auto;
  font-weight: 600;
  font-size: 14px;
  letter-spacing: 0.02em;
  color: #1d1d1f; /* Light mode default */
  transition: color 0.3s ease; /* Smooth theme transition */
}

.headerNameType.darkTheme span {
  color: #ffffff; /* Dark mode override */
}

.headerType {
  color: #6e6e73; /* Light mode */
  font-size: 14px;
  line-height: 20px; /* Match checkbox */
  transition: color 0.3s ease;
}

.headerType.darkTheme {
  color: #8e8e93; /* Dark mode */
}

.customCheckbox {
  width: 20px;
  height: 20px;
  border: 1.5px solid #6e6e73; /* Light mode border, matches HeadersModal headerType */
  border-radius: 50%; /* Circular checkbox */
  margin-right: 8px;
  flex-shrink: 0;
  background: transparent;
  transition: all 0.2s ease, border-color 0.3s ease, background 0.3s ease;
  cursor: pointer;
}

.customCheckbox.darkTheme {
  border-color: #8e8e93; /* Dark mode border, matches HeadersModal headerType.darkTheme */
}

.customCheckbox.checked {
  background: #007aff; /* Light mode checked, matches HeadersModal actionButton */
  border-color: #007aff;
  position: relative;
}

.customCheckbox.checked::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 10px;
  height: 5px;
  border: solid #ffffff;
  border-width: 0 0 2px 2px;
  transform: translate(-50%, -65%) rotate(-45deg);
}

.customCheckbox.checked.darkTheme {
  background: #0a84ff; /* Dark mode checked, matches HeadersModal actionButton.darkTheme */
  border-color: #0a84ff;
}

.customCheckbox:hover {
  background: rgba(0, 122, 255, 0.1); /* Light mode hover, matches HeadersModal actionButton hover */
}

.customCheckbox.checked.darkTheme::after {
  border-color: #ffffff; /* White checkmark in dark mode */
}

/* No items message */
.noItems {
  padding: 13px 16px;
  color: #6e6e73; /* Light mode */
  font-size: 14px;
  line-height: 20px;
  text-align: center;
}

.noItems.darkTheme {
  color: #8e8e93; /* Dark mode */
}

/* Error message */
.error {
  color: #ff3b30; /* Red for errors */
  font-size: 14px;
  padding: 8px 16px;
  text-align: center;
}

.error.darkTheme {
  color: #ff453a; /* Slightly lighter red for dark mode */
}